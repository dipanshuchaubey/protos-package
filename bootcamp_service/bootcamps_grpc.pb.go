// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.5.1
// - protoc             v3.21.12
// source: bootcamp_service/bootcamps.proto

package v1

import (
	context "context"
	request "github.com/dipanshuchaubey/protos-package/bootcamp_service/request"
	response "github.com/dipanshuchaubey/protos-package/bootcamp_service/response"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.64.0 or later.
const _ = grpc.SupportPackageIsVersion9

const (
	BootcampService_GetBootcampsDetails_FullMethodName = "/bootcamp_service.v1.BootcampService/GetBootcampsDetails"
	BootcampService_CreateBootcamp_FullMethodName      = "/bootcamp_service.v1.BootcampService/CreateBootcamp"
)

// BootcampServiceClient is the client API for BootcampService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type BootcampServiceClient interface {
	GetBootcampsDetails(ctx context.Context, in *request.GetBootcampsDetailsRequest, opts ...grpc.CallOption) (*response.GetBootcampsDetailsResponse, error)
	CreateBootcamp(ctx context.Context, in *request.CreateBootcampRequest, opts ...grpc.CallOption) (*response.CreateBootcampResponse, error)
}

type bootcampServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewBootcampServiceClient(cc grpc.ClientConnInterface) BootcampServiceClient {
	return &bootcampServiceClient{cc}
}

func (c *bootcampServiceClient) GetBootcampsDetails(ctx context.Context, in *request.GetBootcampsDetailsRequest, opts ...grpc.CallOption) (*response.GetBootcampsDetailsResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(response.GetBootcampsDetailsResponse)
	err := c.cc.Invoke(ctx, BootcampService_GetBootcampsDetails_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bootcampServiceClient) CreateBootcamp(ctx context.Context, in *request.CreateBootcampRequest, opts ...grpc.CallOption) (*response.CreateBootcampResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(response.CreateBootcampResponse)
	err := c.cc.Invoke(ctx, BootcampService_CreateBootcamp_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BootcampServiceServer is the server API for BootcampService service.
// All implementations must embed UnimplementedBootcampServiceServer
// for forward compatibility.
type BootcampServiceServer interface {
	GetBootcampsDetails(context.Context, *request.GetBootcampsDetailsRequest) (*response.GetBootcampsDetailsResponse, error)
	CreateBootcamp(context.Context, *request.CreateBootcampRequest) (*response.CreateBootcampResponse, error)
	mustEmbedUnimplementedBootcampServiceServer()
}

// UnimplementedBootcampServiceServer must be embedded to have
// forward compatible implementations.
//
// NOTE: this should be embedded by value instead of pointer to avoid a nil
// pointer dereference when methods are called.
type UnimplementedBootcampServiceServer struct{}

func (UnimplementedBootcampServiceServer) GetBootcampsDetails(context.Context, *request.GetBootcampsDetailsRequest) (*response.GetBootcampsDetailsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBootcampsDetails not implemented")
}
func (UnimplementedBootcampServiceServer) CreateBootcamp(context.Context, *request.CreateBootcampRequest) (*response.CreateBootcampResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateBootcamp not implemented")
}
func (UnimplementedBootcampServiceServer) mustEmbedUnimplementedBootcampServiceServer() {}
func (UnimplementedBootcampServiceServer) testEmbeddedByValue()                         {}

// UnsafeBootcampServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to BootcampServiceServer will
// result in compilation errors.
type UnsafeBootcampServiceServer interface {
	mustEmbedUnimplementedBootcampServiceServer()
}

func RegisterBootcampServiceServer(s grpc.ServiceRegistrar, srv BootcampServiceServer) {
	// If the following call pancis, it indicates UnimplementedBootcampServiceServer was
	// embedded by pointer and is nil.  This will cause panics if an
	// unimplemented method is ever invoked, so we test this at initialization
	// time to prevent it from happening at runtime later due to I/O.
	if t, ok := srv.(interface{ testEmbeddedByValue() }); ok {
		t.testEmbeddedByValue()
	}
	s.RegisterService(&BootcampService_ServiceDesc, srv)
}

func _BootcampService_GetBootcampsDetails_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(request.GetBootcampsDetailsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BootcampServiceServer).GetBootcampsDetails(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: BootcampService_GetBootcampsDetails_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BootcampServiceServer).GetBootcampsDetails(ctx, req.(*request.GetBootcampsDetailsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BootcampService_CreateBootcamp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(request.CreateBootcampRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BootcampServiceServer).CreateBootcamp(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: BootcampService_CreateBootcamp_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BootcampServiceServer).CreateBootcamp(ctx, req.(*request.CreateBootcampRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// BootcampService_ServiceDesc is the grpc.ServiceDesc for BootcampService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var BootcampService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "bootcamp_service.v1.BootcampService",
	HandlerType: (*BootcampServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetBootcampsDetails",
			Handler:    _BootcampService_GetBootcampsDetails_Handler,
		},
		{
			MethodName: "CreateBootcamp",
			Handler:    _BootcampService_CreateBootcamp_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "bootcamp_service/bootcamps.proto",
}
